{"remainingRequest":"C:\\Users\\sina\\Desktop\\sina-ui\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\sina\\Desktop\\sina-ui\\packages\\Demo1.vue?vue&type=template&id=5ae04c0c","dependencies":[{"path":"C:\\Users\\sina\\Desktop\\sina-ui\\packages\\Demo1.vue","mtime":1655890299776},{"path":"C:\\Users\\sina\\Desktop\\sina-ui\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1655728201326},{"path":"C:\\Users\\sina\\Desktop\\sina-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655728181451},{"path":"C:\\Users\\sina\\Desktop\\sina-ui\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1655728192867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgaWQ9Im15U3dpcGVyIj4NCiAgICA8ZGl2IGNsYXNzPSJzd2lwZXIiIEB0b3VjaHN0YXJ0PSJ0b3VjaFN0YXJ0IiBAdG91Y2htb3ZlPSJ0b3VjaE1vdmUiIEB0b3VjaGVuZD0idG91Y2hFbmQiPg0KICAgICAgPHNsb3Q+PC9zbG90Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBjbGFzcz0iaW5kaWNhdG9yIj4NCiAgICAgIDxkaXYNCiAgICAgICAgY2xhc3M9ImluZGljYXRvckl0ZW0iDQogICAgICAgIHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIHNsaWRlQ291bnQiDQogICAgICAgIDprZXk9ImluZGV4Ig0KICAgICAgICA6Y2xhc3M9InsgYWN0aXZlOiBpbmRleCA9PT0gY3VycmVudEluZGV4IC0gMSB9Ig0KICAgICAgPjwvZGl2Pg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["C:\\Users\\sina\\Desktop\\sina-ui\\packages\\Demo1.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;MAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/sina/Desktop/sina-ui/packages/Demo1.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div id=\"mySwiper\">\r\n    <div class=\"swiper\" @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\">\r\n      <slot></slot>\r\n    </div>\r\n\r\n    <div class=\"indicator\">\r\n      <div\r\n        class=\"indicatorItem\"\r\n        v-for=\"(item, index) in slideCount\"\r\n        :key=\"index\"\r\n        :class=\"{ active: index === currentIndex - 1 }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Swiper\",\r\n  props: {},\r\n  data: function () {\r\n    return {\r\n      slideCount: 0,\r\n      interval: 3000,\r\n      imgWidth: 0, //swiper每张图片的宽度一样\r\n      swiperStyle: {}, //利用swiper的style对象来控制着“过渡”\r\n      currentIndex: 1, //记录当前滑动的下标\r\n      scrolling: false, //当用手触摸和移动时,则暂停滚动\r\n      animalDuration: 300, //切换一张图片0.3\r\n      showIndicator: true, //当只有一张图片时，不显示小点点\r\n      moveRatio: 0.25,\r\n      playTimer: null, //控制着计时器的开始与暂停\r\n      moveRatio: 0.25\r\n    };\r\n  },\r\n  methods: {\r\n    handleDom: function () {\r\n      let swiperEle = document.querySelector(\".swiper\");\r\n      let slideEles = document.getElementsByClassName(\"slide\");\r\n      this.slideCount = slideEles.length;\r\n      console.log(this.slideCount);\r\n      if (this.slideCount > 1) {\r\n        let cloneFirst = slideEles[0].cloneNode(true);\r\n        let cloneLast = slideEles[this.slideCount - 1].cloneNode(true);\r\n        swiperEle.insertBefore(cloneLast, slideEles[0]);\r\n        swiperEle.appendChild(cloneFirst);\r\n        console.log(slideEles);\r\n        this.imgWidth = swiperEle.offsetWidth;\r\n        this.swiperStyle = swiperEle.style;\r\n      }\r\n      //显示第一张图片（不是刚刚从最后面添加到前面的那张）\r\n      this.setTransform(-this.imgWidth);\r\n    },\r\n\r\n    startTimer: function () {\r\n      let that = this;\r\n      this.playTimer = setInterval(function () {\r\n        that.currentIndex++;\r\n        that.scrollContent(-that.currentIndex * that.imgWidth); //使用过渡实现移动轮播图，效果更舒适\r\n      }, that.interval);\r\n    },\r\n\r\n    setTransform: function (movePosition) {\r\n      //控制着轮播图向左右移动\r\n      this.swiperStyle.transform = `translateX(${movePosition}px)`;\r\n      this.swiperStyle[\"-webkit-transform\"] = `translateX(${movePosition}px)`;\r\n      this.swiperStyle[\"-ms-transform\"] = `translateX(${movePosition}px)`;\r\n    },\r\n\r\n    scrollContent: function (position) {\r\n      this.scrolling = true; //滚动时不能用手滑动图片\r\n      this.swiperStyle.transition = `transform ${this.animalDuration}ms ease`;\r\n      this.setTransform(position);\r\n      this.checkPosition();\r\n      this.scrolling = false;\r\n    },\r\n    checkPosition: function () {\r\n      //在确保“过渡”结束后再检查下标是否合理\r\n\r\n      let that = this;\r\n      setTimeout(function () {\r\n        that.swiperStyle.transition = \"0ms\";\r\n        if (that.currentIndex >= that.slideCount + 1) {\r\n          that.currentIndex = 1;\r\n          that.setTransform(-that.currentIndex * that.imgWidth); //当移动到最后一张，直接移动到第一张，不用过渡\r\n        } else if (that.currentIndex <= 0) {\r\n          that.currentIndex = that.slideCount;\r\n          that.setTransform(-that.currentIndex * that.imgWidth);\r\n        }\r\n      }, that.animalDuration);\r\n    },\r\n    touchStart: function (e) {\r\n      //如果图片正在滚动，则不能滑动图片\r\n      if (this.scrolling) return;\r\n      //滑动时，暂停计时器\r\n      this.stopTimer();\r\n      this.startX = e.touches[0].pageX; //记录手指进入屏幕的距离，用于判断划痕的距离判断是否滑动图片\r\n    },\r\n    touchMove: function (e) {\r\n      this.currentX = e.touches[0].pageX;\r\n      this.distance = this.currentX - this.startX;\r\n      let currentPosition = -this.currentIndex * this.imgWidth;\r\n      let moveDistance = this.distance + currentPosition;\r\n      this.setTransform(moveDistance);\r\n    },\r\n    touchEnd: function (e) {\r\n      let endDistance = Math.abs(this.distance); //取绝对值\r\n      let movePercentage = this.imgWidth * this.moveRatio; //当手指滑动到这个距离，则自动跳到下一张图片\r\n      if (this.distance === 0) {\r\n        return;\r\n      } else if (this.distance > 0 && endDistance > movePercentage) {\r\n        //this.distance>0 则说明手指向右滑\r\n        this.currentIndex--;\r\n      } else {\r\n        this.currentIndex++;\r\n      }\r\n      this.scrollContent(-this.currentIndex * this.imgWidth);\r\n      this.startTimer();\r\n    },\r\n    stopTimer: function () {\r\n      clearInterval(this.playTimer);\r\n    }\r\n  },\r\n  mounted: function () {\r\n    //1.操作dom，在前后添加slide\r\n    setTimeout(() => {\r\n      this.handleDom();\r\n      this.startTimer();\r\n    }, 200);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n#mySwiper {\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  width: 600px;\r\n  height: 500px;\r\n  background-color: black;\r\n}\r\n\r\n.swiper {\r\n  display: flex;\r\n}\r\n.indicator {\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  bottom: 12px;\r\n  width: 100%;\r\n}\r\n.indicatorItem {\r\n  width: 8px;\r\n  height: 8px;\r\n  margin: 5px 3px;\r\n  border-radius: 50%;\r\n  background-color: #fff;\r\n}\r\n.active {\r\n  background-color: rgba(212, 62, 46, 1);\r\n}\r\n</style>\r\n\r\n"]}]}